create table
  public.users (
    created_at timestamp with time zone not null default now(),
    id uuid not null default auth.uid (),
    email character varying not null,
    avatar character varying not null,
    name character varying not null,
    username text null,
    constraint users_pkey primary key (id),
    constraint users_uid_key unique (id),
    constraint users_username_key unique (username),
    constraint users_id_fkey foreign key (id) references auth.users (id) on delete cascade
  ) tablespace pg_default;

create table
  public.channels (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    track character varying not null default 'nOubjLM9Cbc'::character varying,
    position real not null,
    name character varying not null,
    is_playing boolean not null,
    constraint channels_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.members (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    user_id uuid not null,
    channel_id bigint not null,
    role public.member_roles not null,
    constraint members_pkey primary key (id),
    constraint unique_user_channel unique (user_id, channel_id),
    constraint members_channel_id_fkey foreign key (channel_id) references channels (id) on delete cascade,
    constraint members_user_id_fkey foreign key (user_id) references users (id) on delete cascade
  ) tablespace pg_default;

create table
  public.messages (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    channel_id bigint not null,
    user_id uuid null default auth.uid (),
    content jsonb not null,
    client_id uuid null,
    reply_id bigint null,
    message_type public.message_types not null default 'text'::message_types,
    constraint messages_pkey primary key (id),
    constraint messages_channel_id_fkey foreign key (channel_id) references channels (id) on delete cascade,
    constraint messages_reply_id_fkey foreign key (reply_id) references messages (id) on delete set null,
    constraint messages_user_id_fkey foreign key (user_id) references users (id) on delete set null
  ) tablespace pg_default;

create table
  public.attachments (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    message_id bigint not null,
    thumbnail_url text null,
    url text not null,
    mime_type public.mime_types null,
    constraint attachments_pkey primary key (id),
    constraint public_attachments_message_id_fkey foreign key (message_id) references messages (id) on delete cascade
  ) tablespace pg_default;

create table
  public.channel_invites (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    channel_id bigint null,
    url text null,
    constraint channel_invites_pkey primary key (id),
    constraint channel_invites_url_key unique (url),
    constraint channel_invites_channel_id_fkey foreign key (channel_id) references channels (id) on delete cascade
  ) tablespace pg_default;